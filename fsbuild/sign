#!/usr/bin/env python3
# This file is automatically generated by fs-package

import os
import sys
import time
import subprocess

package = {}
with open("PACKAGE.FS", "r") as f:
    for line in f:
        try:
            key, value = line.strip().split("=", 1)
            package[key] = value
        except ValueError:
            pass
package_name_pretty = package["PACKAGE_NAME_PRETTY"]
app = package_name_pretty + ".app"
arch = "x86-64"  # FIXME

# def get_package():
#     global _package_name
#     if _package_name is None:
#         with open("fsbuild/PACKAGE", "r") as f:
#             _package_name = f.read().strip()
#     return _package_name


# def get_arch():
#     # FIXME: Detect properly
#     return "x86-64"


def macos_app_bundle_path():
    return f"fsbuild/_build/{package_name_pretty}/macOS/{arch}/{app}"


def q(arg):
    if " " in arg:
        return f'"{arg}"'
    return arg


def macos_sign():
    # Signing sometimes fails due to Apple errors (timeouts, etc). So we try
    # multiple times before giving up.
    for i in range(20):
        args = [
            "codesign",
            "-f",
            "--deep",
            "--options=runtime",
            "-s",
            "Developer ID Application",
        ]
        if os.path.exists("fsbuild/Entitlements.plist"):
            args.extend(["--entitlements", "fsbuild/Entitlements.plist"])
        args.append(macos_app_bundle_path())

        print(" ".join(f"{q(a)}" for a in args))
        p = subprocess.Popen(args)
        if p.wait() == 0:
            break
        time.sleep(1.0 * i)
        print("Attempt", i + 2)
    else:
        print("Giving up")
        sys.exit(1)


def main():
    if sys.platform == "darwin":
        macos_sign()
    else:
        print("Skipping sign step (No signatures for this platform")


if __name__ == "__main__":
    main()
