#ifndef FSUAE_ACTION_H_
#define FSUAE_ACTION_H_

#include "fsuae-config.h"
#include "uae/uae.h"

void fsuae_action_init(void);

// ----------------------------------------------------------------------------

#define EMU(x) (x | FSEMU_ACTION_EMU_FLAG)

// ----------------------------------------------------------------------------

#define ACTION_KEY_ESCAPE (INPUTEVENT_KEY_ESC | FSEMU_ACTION_EMU_FLAG)
#define ACTION_KEY_F1 (INPUTEVENT_KEY_F1 | FSEMU_ACTION_EMU_FLAG)
#define ACTION_KEY_F2 (INPUTEVENT_KEY_F2 | FSEMU_ACTION_EMU_FLAG)
#define ACTION_KEY_F3 (INPUTEVENT_KEY_F3 | FSEMU_ACTION_EMU_FLAG)
#define ACTION_KEY_F4 (INPUTEVENT_KEY_F4 | FSEMU_ACTION_EMU_FLAG)
#define ACTION_KEY_F5 (INPUTEVENT_KEY_F5 | FSEMU_ACTION_EMU_FLAG)
#define ACTION_KEY_F6 (INPUTEVENT_KEY_F6 | FSEMU_ACTION_EMU_FLAG)
#define ACTION_KEY_F7 (INPUTEVENT_KEY_F7 | FSEMU_ACTION_EMU_FLAG)
#define ACTION_KEY_F8 (INPUTEVENT_KEY_F8 | FSEMU_ACTION_EMU_FLAG)
#define ACTION_KEY_F9 (INPUTEVENT_KEY_F9 | FSEMU_ACTION_EMU_FLAG)
#define ACTION_KEY_F10 (INPUTEVENT_KEY_F10 | FSEMU_ACTION_EMU_FLAG)

#define ACTION_KEY_1 (INPUTEVENT_KEY_1 | FSEMU_ACTION_EMU_FLAG)
#define ACTION_KEY_2 (INPUTEVENT_KEY_2 | FSEMU_ACTION_EMU_FLAG)
#define ACTION_KEY_3 (INPUTEVENT_KEY_3 | FSEMU_ACTION_EMU_FLAG)
#define ACTION_KEY_4 (INPUTEVENT_KEY_4 | FSEMU_ACTION_EMU_FLAG)
#define ACTION_KEY_5 (INPUTEVENT_KEY_5 | FSEMU_ACTION_EMU_FLAG)
#define ACTION_KEY_6 (INPUTEVENT_KEY_6 | FSEMU_ACTION_EMU_FLAG)
#define ACTION_KEY_7 (INPUTEVENT_KEY_7 | FSEMU_ACTION_EMU_FLAG)
#define ACTION_KEY_8 (INPUTEVENT_KEY_8 | FSEMU_ACTION_EMU_FLAG)
#define ACTION_KEY_9 (INPUTEVENT_KEY_9 | FSEMU_ACTION_EMU_FLAG)
#define ACTION_KEY_0 (INPUTEVENT_KEY_0 | FSEMU_ACTION_EMU_FLAG)
#define ACTION_KEY_TAB (INPUTEVENT_KEY_TAB | FSEMU_ACTION_EMU_FLAG)
#define ACTION_KEY_A (INPUTEVENT_KEY_A | FSEMU_ACTION_EMU_FLAG)
#define ACTION_KEY_B (INPUTEVENT_KEY_B | FSEMU_ACTION_EMU_FLAG)
#define ACTION_KEY_C (INPUTEVENT_KEY_C | FSEMU_ACTION_EMU_FLAG)
#define ACTION_KEY_D (INPUTEVENT_KEY_D | FSEMU_ACTION_EMU_FLAG)
#define ACTION_KEY_E (INPUTEVENT_KEY_E | FSEMU_ACTION_EMU_FLAG)
#define ACTION_KEY_F (INPUTEVENT_KEY_F | FSEMU_ACTION_EMU_FLAG)
#define ACTION_KEY_G (INPUTEVENT_KEY_G | FSEMU_ACTION_EMU_FLAG)
#define ACTION_KEY_H (INPUTEVENT_KEY_H | FSEMU_ACTION_EMU_FLAG)
#define ACTION_KEY_I (INPUTEVENT_KEY_I | FSEMU_ACTION_EMU_FLAG)
#define ACTION_KEY_J (INPUTEVENT_KEY_J | FSEMU_ACTION_EMU_FLAG)
#define ACTION_KEY_K (INPUTEVENT_KEY_K | FSEMU_ACTION_EMU_FLAG)
#define ACTION_KEY_L (INPUTEVENT_KEY_L | FSEMU_ACTION_EMU_FLAG)
#define ACTION_KEY_M (INPUTEVENT_KEY_M | FSEMU_ACTION_EMU_FLAG)
#define ACTION_KEY_N (INPUTEVENT_KEY_N | FSEMU_ACTION_EMU_FLAG)
#define ACTION_KEY_O (INPUTEVENT_KEY_O | FSEMU_ACTION_EMU_FLAG)
#define ACTION_KEY_P (INPUTEVENT_KEY_P | FSEMU_ACTION_EMU_FLAG)
#define ACTION_KEY_Q (INPUTEVENT_KEY_Q | FSEMU_ACTION_EMU_FLAG)
#define ACTION_KEY_R (INPUTEVENT_KEY_R | FSEMU_ACTION_EMU_FLAG)
#define ACTION_KEY_S (INPUTEVENT_KEY_S | FSEMU_ACTION_EMU_FLAG)
#define ACTION_KEY_T (INPUTEVENT_KEY_T | FSEMU_ACTION_EMU_FLAG)
#define ACTION_KEY_U (INPUTEVENT_KEY_U | FSEMU_ACTION_EMU_FLAG)
#define ACTION_KEY_V (INPUTEVENT_KEY_V | FSEMU_ACTION_EMU_FLAG)
#define ACTION_KEY_W (INPUTEVENT_KEY_W | FSEMU_ACTION_EMU_FLAG)
#define ACTION_KEY_X (INPUTEVENT_KEY_X | FSEMU_ACTION_EMU_FLAG)
#define ACTION_KEY_Y (INPUTEVENT_KEY_Y | FSEMU_ACTION_EMU_FLAG)
#define ACTION_KEY_Z (INPUTEVENT_KEY_Z | FSEMU_ACTION_EMU_FLAG)

#define ACTION_KEY_CAPSLOCK (INPUTEVENT_KEY_CAPS_LOCK | FSEMU_ACTION_EMU_FLAG)
#define ACTION_KEY_KP1 (INPUTEVENT_KEY_NP_1 | FSEMU_ACTION_EMU_FLAG)
#define ACTION_KEY_KP2 (INPUTEVENT_KEY_NP_2 | FSEMU_ACTION_EMU_FLAG)
#define ACTION_KEY_KP3 (INPUTEVENT_KEY_NP_3 | FSEMU_ACTION_EMU_FLAG)
#define ACTION_KEY_KP4 (INPUTEVENT_KEY_NP_4 | FSEMU_ACTION_EMU_FLAG)
#define ACTION_KEY_KP5 (INPUTEVENT_KEY_NP_5 | FSEMU_ACTION_EMU_FLAG)
#define ACTION_KEY_KP6 (INPUTEVENT_KEY_NP_6 | FSEMU_ACTION_EMU_FLAG)
#define ACTION_KEY_KP7 (INPUTEVENT_KEY_NP_7 | FSEMU_ACTION_EMU_FLAG)
#define ACTION_KEY_KP8 (INPUTEVENT_KEY_NP_8 | FSEMU_ACTION_EMU_FLAG)
#define ACTION_KEY_KP9 (INPUTEVENT_KEY_NP_9 | FSEMU_ACTION_EMU_FLAG)
#define ACTION_KEY_KP0 (INPUTEVENT_KEY_NP_0 | FSEMU_ACTION_EMU_FLAG)
#define ACTION_KEY_KPPERIOD (INPUTEVENT_KEY_NP_PERIOD | FSEMU_ACTION_EMU_FLAG)
#define ACTION_KEY_KPPLUS (INPUTEVENT_KEY_NP_ADD | FSEMU_ACTION_EMU_FLAG)
#define ACTION_KEY_KPMINUS (INPUTEVENT_KEY_NP_SUB | FSEMU_ACTION_EMU_FLAG)
#define ACTION_KEY_KPMUL (INPUTEVENT_KEY_NP_MUL | FSEMU_ACTION_EMU_FLAG)
#define ACTION_KEY_KPDIV (INPUTEVENT_KEY_NP_DIV | FSEMU_ACTION_EMU_FLAG)
#define ACTION_KEY_KPENTER (INPUTEVENT_KEY_ENTER | FSEMU_ACTION_EMU_FLAG)
#define ACTION_KEY_MINUS (INPUTEVENT_KEY_SUB | FSEMU_ACTION_EMU_FLAG)
#define ACTION_KEY_EQUALS (INPUTEVENT_KEY_EQUALS | FSEMU_ACTION_EMU_FLAG)
#define ACTION_KEY_BACKSPACE (INPUTEVENT_KEY_BACKSPACE | FSEMU_ACTION_EMU_FLAG)
#define ACTION_KEY_RETURN (INPUTEVENT_KEY_RETURN | FSEMU_ACTION_EMU_FLAG)
#define ACTION_KEY_SPACE (INPUTEVENT_KEY_SPACE | FSEMU_ACTION_EMU_FLAG)
#define ACTION_KEY_CTRL (INPUTEVENT_KEY_CTRL | FSEMU_ACTION_EMU_FLAG)

#define ACTION_KEY_LSHIFT (INPUTEVENT_KEY_SHIFT_LEFT | FSEMU_ACTION_EMU_FLAG)
#define ACTION_KEY_RSHIFT (INPUTEVENT_KEY_SHIFT_RIGHT | FSEMU_ACTION_EMU_FLAG)

#define ACTION_KEY_LALT (INPUTEVENT_KEY_ALT_LEFT | FSEMU_ACTION_EMU_FLAG)
#define ACTION_KEY_RALT (INPUTEVENT_KEY_ALT_RIGHT | FSEMU_ACTION_EMU_FLAG)

#define ACTION_KEY_LAMIGA (INPUTEVENT_KEY_AMIGA_LEFT | FSEMU_ACTION_EMU_FLAG)
#define ACTION_KEY_RAMIGA (INPUTEVENT_KEY_AMIGA_RIGHT | FSEMU_ACTION_EMU_FLAG)

#define ACTION_KEY_UP (INPUTEVENT_KEY_CURSOR_UP | FSEMU_ACTION_EMU_FLAG)
#define ACTION_KEY_DOWN (INPUTEVENT_KEY_CURSOR_DOWN | FSEMU_ACTION_EMU_FLAG)
#define ACTION_KEY_LEFT (INPUTEVENT_KEY_CURSOR_LEFT | FSEMU_ACTION_EMU_FLAG)
#define ACTION_KEY_RIGHT (INPUTEVENT_KEY_CURSOR_RIGHT | FSEMU_ACTION_EMU_FLAG)

#define ACTION_KEY_KPLPAREN (INPUTEVENT_KEY_NP_LPAREN | FSEMU_ACTION_EMU_FLAG)
#define ACTION_KEY_KPRPAREN (INPUTEVENT_KEY_NP_RPAREN | FSEMU_ACTION_EMU_FLAG)
#define ACTION_KEY_DEL (INPUTEVENT_KEY_DEL | FSEMU_ACTION_EMU_FLAG)
#define ACTION_KEY_HELP (INPUTEVENT_KEY_HELP | FSEMU_ACTION_EMU_FLAG)
#define ACTION_KEY_LBRACKET \
    (INPUTEVENT_KEY_LEFTBRACKET | FSEMU_ACTION_EMU_FLAG)
#define ACTION_KEY_RBRACKET \
    (INPUTEVENT_KEY_RIGHTBRACKET | FSEMU_ACTION_EMU_FLAG)
#define ACTION_KEY_SEMICOLON (INPUTEVENT_KEY_SEMICOLON | FSEMU_ACTION_EMU_FLAG)

#define ACTION_KEY_SLASH (INPUTEVENT_KEY_DIV | FSEMU_ACTION_EMU_FLAG)
#define ACTION_KEY_BACKSLASH (INPUTEVENT_KEY_BACKSLASH | FSEMU_ACTION_EMU_FLAG)
#define ACTION_KEY_COMMA (INPUTEVENT_KEY_COMMA | FSEMU_ACTION_EMU_FLAG)
#define ACTION_KEY_PERIOD (INPUTEVENT_KEY_PERIOD | FSEMU_ACTION_EMU_FLAG)

// FIXME: Call this singlequote instead?
#define ACTION_KEY_HASH (INPUTEVENT_KEY_SINGLEQUOTE | FSEMU_ACTION_EMU_FLAG)
// FIXME: Backquote instead of backtick?
#define ACTION_KEY_BACKTICK (INPUTEVENT_KEY_BACKQUOTE | FSEMU_ACTION_EMU_FLAG)

// 0x2B is the number/hash key on some international keyboards.
// SDL calls this SDLK_BACKSLASH
#define ACTION_KEY_2B (INPUTEVENT_KEY_2B | FSEMU_ACTION_EMU_FLAG)

// 0x30 is the key to the left of Z on international keyboards.
// SDL calls this SDL_SCANCODE_NONUSBACKSLASH
#define ACTION_KEY_30 (INPUTEVENT_KEY_30 | FSEMU_ACTION_EMU_FLAG)

// ----------------------------------------------------------------------------

#define ACTION_JOYSTICK1_UP EMU(INPUTEVENT_JOY2_UP)
#define ACTION_JOYSTICK1_RIGHT EMU(INPUTEVENT_JOY2_RIGHT)
#define ACTION_JOYSTICK1_DOWN EMU(INPUTEVENT_JOY2_DOWN)
#define ACTION_JOYSTICK1_LEFT EMU(INPUTEVENT_JOY2_LEFT)
#define ACTION_JOYSTICK1_FIRE EMU(INPUTEVENT_JOY2_FIRE_BUTTON)
#define ACTION_JOYSTICK1_BUTTON2 EMU(INPUTEVENT_JOY2_2ND_BUTTON)

#define ACTION_JOYSTICK0_UP EMU(INPUTEVENT_JOY1_UP)
#define ACTION_JOYSTICK0_RIGHT EMU(INPUTEVENT_JOY1_RIGHT)
#define ACTION_JOYSTICK0_DOWN EMU(INPUTEVENT_JOY1_DOWN)
#define ACTION_JOYSTICK0_LEFT EMU(INPUTEVENT_JOY1_LEFT)
#define ACTION_JOYSTICK0_FIRE EMU(INPUTEVENT_JOY1_FIRE_BUTTON)
#define ACTION_JOYSTICK0_BUTTON2 EMU(INPUTEVENT_JOY1_2ND_BUTTON)

#if 1

#define ACTION_MOUSE1_UP EMU(INPUTEVENT_JOYPORT1_MOUSEYNEG)
#define ACTION_MOUSE1_RIGHT EMU(INPUTEVENT_JOYPORT1_MOUSEXPOS)
#define ACTION_MOUSE1_DOWN EMU(INPUTEVENT_JOYPORT1_MOUSEYPOS)
#define ACTION_MOUSE1_LEFT EMU(INPUTEVENT_JOYPORT1_MOUSEXNEG)

#define ACTION_MOUSE0_UP EMU(INPUTEVENT_JOYPORT0_MOUSEYNEG)
#define ACTION_MOUSE0_RIGHT EMU(INPUTEVENT_JOYPORT0_MOUSEXPOS)
#define ACTION_MOUSE0_DOWN EMU(INPUTEVENT_JOYPORT0_MOUSEYPOS)
#define ACTION_MOUSE0_LEFT EMU(INPUTEVENT_JOYPORT0_MOUSEXNEG)

#else
#define ACTION_MOUSE1_UP EMU(INPUTEVENT_MOUSE2_UP)
#define ACTION_MOUSE1_RIGHT EMU(INPUTEVENT_JOYPORT1_MOUSEXPOS)
#define ACTION_MOUSE1_DOWN EMU(INPUTEVENT_MOUSE2_DOWN)
#define ACTION_MOUSE1_LEFT EMU(INPUTEVENT_MOUSE2_LEFT)
// #define ACTION_MOUSE1_FIRE EMU(INPUTEVENT_JOY2_FIRE_BUTTON)

#define ACTION_MOUSE0_UP EMU(INPUTEVENT_MOUSE1_UP)
#define ACTION_MOUSE0_RIGHT EMU(INPUTEVENT_JOYPORT0_MOUSEXPOS)
#define ACTION_MOUSE0_DOWN EMU(INPUTEVENT_MOUSE1_DOWN)
#define ACTION_MOUSE0_LEFT EMU(INPUTEVENT_MOUSE1_LEFT)
// #define ACTION_MOUSE0_FIRE EMU(INPUTEVENT_JOY1_FIRE_BUTTON)
#endif

#define ACTION_PORT0_MOUSEMODE EMU(INPUTEVENT_AMIGA_JOYPORT_MODE_0_MOUSE)

#if 0
DEFEVENT(AMIGA_JOYPORT_MODE_0_MOUSE, _T(""), AM_K, 0, 0, 0)
DEFEVENT(AMIGA_JOYPORT_MODE_0_DJOY, _T(""), AM_K, 0, 0, 0)
DEFEVENT(AMIGA_JOYPORT_MODE_0_GAMEPAD, _T(""), AM_K, 0, 0, 0)
DEFEVENT(AMIGA_JOYPORT_MODE_0_AJOY, _T(""), AM_K, 0, 0, 0)
DEFEVENT(AMIGA_JOYPORT_MODE_0_CDTVJOY, _T(""), AM_K, 0, 0, 0)
DEFEVENT(AMIGA_JOYPORT_MODE_0_CD32JOY, _T(""), AM_K, 0, 0, 0)
DEFEVENT(AMIGA_JOYPORT_MODE_0_LIGHTPEN, _T(""), AM_K, 0, 0, 0)
DEFEVENT(AMIGA_JOYPORT_MODE_0_LAST, _T(""), AM_K, 0, 0, 0)

DEFEVENT(AMIGA_JOYPORT_MODE_1_NONE, _T(""), AM_K, 0, 0, 0)
DEFEVENT(AMIGA_JOYPORT_MODE_1_MOUSE, _T(""), AM_K, 0, 0, 0)
DEFEVENT(AMIGA_JOYPORT_MODE_1_DJOY, _T(""), AM_K, 0, 0, 0)
DEFEVENT(AMIGA_JOYPORT_MODE_1_GAMEPAD, _T(""), AM_K, 0, 0, 0)
DEFEVENT(AMIGA_JOYPORT_MODE_1_AJOY, _T(""), AM_K, 0, 0, 0)
DEFEVENT(AMIGA_JOYPORT_MODE_1_CDTVJOY, _T(""), AM_K, 0, 0, 0)
DEFEVENT(AMIGA_JOYPORT_MODE_1_CD32JOY, _T(""), AM_K, 0, 0, 0)
DEFEVENT(AMIGA_JOYPORT_MODE_1_LIGHTPEN, _T(""), AM_K, 0, 0, 0)
DEFEVENT(AMIGA_JOYPORT_MODE_1_LAST, _T(""), AM_K, 0, 0, 0)
#endif

#endif  // FSUAE_ACTION_H_
