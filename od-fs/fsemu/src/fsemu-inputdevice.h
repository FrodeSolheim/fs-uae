#ifndef FSEMU_INPUTDEVICE_H_
#define FSEMU_INPUTDEVICE_H_

#include <stdbool.h>

#include "fsemu-common.h"
#include "fsemu-keyboard.h"
#include "fsemu-refable.h"
#include "fsemu-types.h"

#ifdef __cplusplus
extern "C" {
#endif

typedef struct fsemu_inputdevice fsemu_inputdevice_t;

#define FSEMU_INPUTDEVICE_TYPE_CONTROLLER 'c'
#define FSEMU_INPUTDEVICE_TYPE_KEYBOARD 'k'
#define FSEMU_INPUTDEVICE_TYPE_MOUSE 'm'
#define FSEMU_INPUTDEVICE_TYPE_JOYSTICK 'j'

fsemu_inputdevice_t *fsemu_inputdevice_new(void);

void fsemu_inputdevice_ref(fsemu_inputdevice_t *device);
void fsemu_inputdevice_unref(fsemu_inputdevice_t *device);

int fsemu_inputdevice_type(fsemu_inputdevice_t *device);
void fsemu_inputdevice_set_type(fsemu_inputdevice_t *device, int type);

const char *fsemu_inputdevice_name(fsemu_inputdevice_t *device);
void fsemu_inputdevice_set_name(fsemu_inputdevice_t *device, const char *name);

enum {
    FSEMU_INPUTDEVICE_KEYBOARD_OFFSET = 0,
    // Section for scancodes. The scancodes _must_ correspond to SDL2's
    // scancodes. This is to make direct mapping possible without managing
    // lookup tables.
    FSEMU_INPUTDEVICE_A = 4,
    FSEMU_INPUTDEVICE_B = 5,
    FSEMU_INPUTDEVICE_C = 6,
    FSEMU_INPUTDEVICE_D = 7,
    FSEMU_INPUTDEVICE_E = 8,
    FSEMU_INPUTDEVICE_F = 9,
    FSEMU_INPUTDEVICE_G = 10,
    FSEMU_INPUTDEVICE_H = 11,
    FSEMU_INPUTDEVICE_I = 12,
    FSEMU_INPUTDEVICE_J = 13,
    FSEMU_INPUTDEVICE_K = 14,
    FSEMU_INPUTDEVICE_L = 15,
    FSEMU_INPUTDEVICE_M = 16,
    FSEMU_INPUTDEVICE_N = 17,
    FSEMU_INPUTDEVICE_O = 18,
    FSEMU_INPUTDEVICE_P = 19,
    FSEMU_INPUTDEVICE_Q = 20,
    FSEMU_INPUTDEVICE_R = 21,
    FSEMU_INPUTDEVICE_S = 22,
    FSEMU_INPUTDEVICE_T = 23,
    FSEMU_INPUTDEVICE_U = 24,
    FSEMU_INPUTDEVICE_V = 25,
    FSEMU_INPUTDEVICE_W = 26,
    FSEMU_INPUTDEVICE_X = 27,
    FSEMU_INPUTDEVICE_Y = 28,
    FSEMU_INPUTDEVICE_Z = 29,
    FSEMU_INPUTDEVICE_1 = 30,
    FSEMU_INPUTDEVICE_2 = 31,
    FSEMU_INPUTDEVICE_3 = 32,
    FSEMU_INPUTDEVICE_4 = 33,
    FSEMU_INPUTDEVICE_5 = 34,
    FSEMU_INPUTDEVICE_6 = 35,
    FSEMU_INPUTDEVICE_7 = 36,
    FSEMU_INPUTDEVICE_8 = 37,
    FSEMU_INPUTDEVICE_9 = 38,
    FSEMU_INPUTDEVICE_0 = 39,
    FSEMU_INPUTDEVICE_RETURN = 40,
    FSEMU_INPUTDEVICE_ESCAPE = 41,
    FSEMU_INPUTDEVICE_BACKSPACE = 42,
    FSEMU_INPUTDEVICE_TAB = 43,
    FSEMU_INPUTDEVICE_SPACE = 44,
    FSEMU_INPUTDEVICE_MINUS = 45,
    FSEMU_INPUTDEVICE_EQUALS = 46,
    FSEMU_INPUTDEVICE_LEFTBRACKET = 47,
    FSEMU_INPUTDEVICE_RIGHTBRACKET = 48,
    FSEMU_INPUTDEVICE_BACKSLASH = 49,
    FSEMU_INPUTDEVICE_NONUSHASH = 50,
    FSEMU_INPUTDEVICE_SEMICOLON = 51,
    FSEMU_INPUTDEVICE_APOSTROPHE = 52,
    FSEMU_INPUTDEVICE_GRAVE = 53,
    FSEMU_INPUTDEVICE_COMMA = 54,
    FSEMU_INPUTDEVICE_PERIOD = 55,
    FSEMU_INPUTDEVICE_SLASH = 56,
    FSEMU_INPUTDEVICE_CAPSLOCK = 57,
    FSEMU_INPUTDEVICE_F1 = 58,
    FSEMU_INPUTDEVICE_F2 = 59,
    FSEMU_INPUTDEVICE_F3 = 60,
    FSEMU_INPUTDEVICE_F4 = 61,
    FSEMU_INPUTDEVICE_F5 = 62,
    FSEMU_INPUTDEVICE_F6 = 63,
    FSEMU_INPUTDEVICE_F7 = 64,
    FSEMU_INPUTDEVICE_F8 = 65,
    FSEMU_INPUTDEVICE_F9 = 66,
    FSEMU_INPUTDEVICE_F10 = 67,
    FSEMU_INPUTDEVICE_F11 = 68,
    FSEMU_INPUTDEVICE_F12 = 69,
    FSEMU_INPUTDEVICE_PRINTSCREEN = 70,
    FSEMU_INPUTDEVICE_SCROLLLOCK = 71,
    FSEMU_INPUTDEVICE_PAUSE = 72,
    FSEMU_INPUTDEVICE_INSERT = 73,
    FSEMU_INPUTDEVICE_HOME = 74,
    FSEMU_INPUTDEVICE_PAGEUP = 75,
    FSEMU_INPUTDEVICE_DELETE = 76,
    FSEMU_INPUTDEVICE_END = 77,
    FSEMU_INPUTDEVICE_PAGEDOWN = 78,
    FSEMU_INPUTDEVICE_RIGHT = 79,
    FSEMU_INPUTDEVICE_LEFT = 80,
    FSEMU_INPUTDEVICE_DOWN = 81,
    FSEMU_INPUTDEVICE_UP = 82,
    FSEMU_INPUTDEVICE_NUMLOCKCLEAR = 83,
    FSEMU_INPUTDEVICE_KPDIVIDE = 84,
    FSEMU_INPUTDEVICE_KPMULTIPLY = 85,
    FSEMU_INPUTDEVICE_KPMINUS = 86,
    FSEMU_INPUTDEVICE_KPPLUS = 87,
    FSEMU_INPUTDEVICE_KPENTER = 88,
    FSEMU_INPUTDEVICE_KP1 = 89,
    FSEMU_INPUTDEVICE_KP2 = 90,
    FSEMU_INPUTDEVICE_KP3 = 91,
    FSEMU_INPUTDEVICE_KP4 = 92,
    FSEMU_INPUTDEVICE_KP5 = 93,
    FSEMU_INPUTDEVICE_KP6 = 94,
    FSEMU_INPUTDEVICE_KP7 = 95,
    FSEMU_INPUTDEVICE_KP8 = 96,
    FSEMU_INPUTDEVICE_KP9 = 97,
    FSEMU_INPUTDEVICE_KP0 = 98,
    FSEMU_INPUTDEVICE_KPPERIOD = 99,
    FSEMU_INPUTDEVICE_NONUSBACKSLASH = 100,
    FSEMU_INPUTDEVICE_APPLICATION = 101,
    FSEMU_INPUTDEVICE_POWER = 102,
    FSEMU_INPUTDEVICE_KPEQUALS = 103,
    FSEMU_INPUTDEVICE_F13 = 104,
    FSEMU_INPUTDEVICE_F14 = 105,
    FSEMU_INPUTDEVICE_F15 = 106,
    FSEMU_INPUTDEVICE_F16 = 107,
    FSEMU_INPUTDEVICE_F17 = 108,
    FSEMU_INPUTDEVICE_F18 = 109,
    FSEMU_INPUTDEVICE_F19 = 110,
    FSEMU_INPUTDEVICE_F20 = 111,
    FSEMU_INPUTDEVICE_F21 = 112,
    FSEMU_INPUTDEVICE_F22 = 113,
    FSEMU_INPUTDEVICE_F23 = 114,
    FSEMU_INPUTDEVICE_F24 = 115,
    FSEMU_INPUTDEVICE_EXECUTE = 116,
    FSEMU_INPUTDEVICE_HELP = 117,
    FSEMU_INPUTDEVICE_MENU = 118,
    // Disabled for now to avoid confusion about select button gamepads.
    // FSEMU_INPUTDEVICE_SELECT = 119,
    FSEMU_INPUTDEVICE_STOP = 120,
    FSEMU_INPUTDEVICE_AGAIN = 121,
    FSEMU_INPUTDEVICE_UNDO = 122,
    FSEMU_INPUTDEVICE_CUT = 123,
    FSEMU_INPUTDEVICE_COPY = 124,
    FSEMU_INPUTDEVICE_PASTE = 125,
    FSEMU_INPUTDEVICE_FIND = 126,
    FSEMU_INPUTDEVICE_MUTE = 127,
    FSEMU_INPUTDEVICE_VOLUMEUP = 128,
    FSEMU_INPUTDEVICE_VOLUMEDOWN = 129,

    FSEMU_INPUTDEVICE_KPCOMMA = 133,
    FSEMU_INPUTDEVICE_KPEQUALSAS400 = 134,
    FSEMU_INPUTDEVICE_INTERNATIONAL1 = 135,
    FSEMU_INPUTDEVICE_INTERNATIONAL2 = 136,
    FSEMU_INPUTDEVICE_INTERNATIONAL3 = 137,
    FSEMU_INPUTDEVICE_INTERNATIONAL4 = 138,
    FSEMU_INPUTDEVICE_INTERNATIONAL5 = 139,
    FSEMU_INPUTDEVICE_INTERNATIONAL6 = 140,
    FSEMU_INPUTDEVICE_INTERNATIONAL7 = 141,
    FSEMU_INPUTDEVICE_INTERNATIONAL8 = 142,
    FSEMU_INPUTDEVICE_INTERNATIONAL9 = 143,
    FSEMU_INPUTDEVICE_LANG1 = 144,
    FSEMU_INPUTDEVICE_LANG2 = 145,
    FSEMU_INPUTDEVICE_LANG3 = 146,
    FSEMU_INPUTDEVICE_LANG4 = 147,
    FSEMU_INPUTDEVICE_LANG5 = 148,
    FSEMU_INPUTDEVICE_LANG6 = 149,
    FSEMU_INPUTDEVICE_LANG7 = 150,
    FSEMU_INPUTDEVICE_LANG8 = 151,
    FSEMU_INPUTDEVICE_LANG9 = 152,
    FSEMU_INPUTDEVICE_ALTERASE = 153,
    FSEMU_INPUTDEVICE_SYSREQ = 154,
    FSEMU_INPUTDEVICE_CANCEL = 155,
    FSEMU_INPUTDEVICE_CLEAR = 156,
    FSEMU_INPUTDEVICE_PRIOR = 157,
    FSEMU_INPUTDEVICE_RETURN2 = 158,
    FSEMU_INPUTDEVICE_SEPARATOR = 159,
    FSEMU_INPUTDEVICE_OUT = 160,
    FSEMU_INPUTDEVICE_OPER = 161,
    FSEMU_INPUTDEVICE_CLEARAGAIN = 162,
    FSEMU_INPUTDEVICE_CRSEL = 163,
    FSEMU_INPUTDEVICE_EXSEL = 164,

    FSEMU_INPUTDEVICE_KP00 = 176,
    FSEMU_INPUTDEVICE_KP000 = 177,
    FSEMU_INPUTDEVICE_THOUSANDSSEPARATOR = 178,
    FSEMU_INPUTDEVICE_DECIMALSEPARATOR = 179,
    FSEMU_INPUTDEVICE_CURRENCYUNIT = 180,
    FSEMU_INPUTDEVICE_CURRENCYSUBUNIT = 181,
    FSEMU_INPUTDEVICE_KPLEFTPAREN = 182,
    FSEMU_INPUTDEVICE_KPRIGHTPAREN = 183,
    FSEMU_INPUTDEVICE_KPLEFTBRACE = 184,
    FSEMU_INPUTDEVICE_KPRIGHTBRACE = 185,
    FSEMU_INPUTDEVICE_KPTAB = 186,
    FSEMU_INPUTDEVICE_KPBACKSPACE = 187,
    FSEMU_INPUTDEVICE_KPA = 188,
    FSEMU_INPUTDEVICE_KPB = 189,
    FSEMU_INPUTDEVICE_KPC = 190,
    FSEMU_INPUTDEVICE_KPD = 191,
    FSEMU_INPUTDEVICE_KPE = 192,
    FSEMU_INPUTDEVICE_KPF = 193,
    FSEMU_INPUTDEVICE_KPXOR = 194,
    FSEMU_INPUTDEVICE_KPPOWER = 195,
    FSEMU_INPUTDEVICE_KPPERCENT = 196,
    FSEMU_INPUTDEVICE_KPLESS = 197,
    FSEMU_INPUTDEVICE_KPGREATER = 198,
    FSEMU_INPUTDEVICE_KPAMPERSAND = 199,
    FSEMU_INPUTDEVICE_KPDBLAMPERSAND = 200,
    FSEMU_INPUTDEVICE_KPVERTICALBAR = 201,
    FSEMU_INPUTDEVICE_KPDBLVERTICALBAR = 202,
    FSEMU_INPUTDEVICE_KPCOLON = 203,
    FSEMU_INPUTDEVICE_KPHASH = 204,
    FSEMU_INPUTDEVICE_KPSPACE = 205,
    FSEMU_INPUTDEVICE_KPAT = 206,
    FSEMU_INPUTDEVICE_KPEXCLAM = 207,
    FSEMU_INPUTDEVICE_KPMEMSTORE = 208,
    FSEMU_INPUTDEVICE_KPMEMRECALL = 209,
    FSEMU_INPUTDEVICE_KPMEMCLEAR = 210,
    FSEMU_INPUTDEVICE_KPMEMADD = 211,
    FSEMU_INPUTDEVICE_KPMEMSUBTRACT = 212,
    FSEMU_INPUTDEVICE_KPMEMMULTIPLY = 213,
    FSEMU_INPUTDEVICE_KPMEMDIVIDE = 214,
    FSEMU_INPUTDEVICE_KPPLUSMINUS = 215,
    FSEMU_INPUTDEVICE_KPCLEAR = 216,
    FSEMU_INPUTDEVICE_KPCLEARENTRY = 217,
    FSEMU_INPUTDEVICE_KPBINARY = 218,
    FSEMU_INPUTDEVICE_KPOCTAL = 219,
    FSEMU_INPUTDEVICE_KPDECIMAL = 220,
    FSEMU_INPUTDEVICE_KPHEXADECIMAL = 221,

    FSEMU_INPUTDEVICE_LCTRL = 224,
    FSEMU_INPUTDEVICE_LSHIFT = 225,
    FSEMU_INPUTDEVICE_LALT = 226,
    FSEMU_INPUTDEVICE_LGUI = 227,
    FSEMU_INPUTDEVICE_RCTRL = 228,
    FSEMU_INPUTDEVICE_RSHIFT = 229,
    FSEMU_INPUTDEVICE_RALT = 230,
    FSEMU_INPUTDEVICE_RGUI = 231,

    FSEMU_INPUTDEVICE_MODE = 257,
    FSEMU_INPUTDEVICE_AUDIONEXT = 258,
    FSEMU_INPUTDEVICE_AUDIOPREV = 259,
    FSEMU_INPUTDEVICE_AUDIOSTOP = 260,
    FSEMU_INPUTDEVICE_AUDIOPLAY = 261,
    FSEMU_INPUTDEVICE_AUDIOMUTE = 262,
    FSEMU_INPUTDEVICE_MEDIASELECT = 263,
    FSEMU_INPUTDEVICE_WWW = 264,
    FSEMU_INPUTDEVICE_MAIL = 265,
    FSEMU_INPUTDEVICE_CALCULATOR = 266,
    FSEMU_INPUTDEVICE_COMPUTER = 267,
    FSEMU_INPUTDEVICE_ACSEARCH = 268,
    FSEMU_INPUTDEVICE_ACHOME = 269,
    FSEMU_INPUTDEVICE_ACBACK = 270,
    FSEMU_INPUTDEVICE_ACFORWARD = 271,
    FSEMU_INPUTDEVICE_ACSTOP = 272,
    FSEMU_INPUTDEVICE_ACREFRESH = 273,
    FSEMU_INPUTDEVICE_ACBOOKMARKS = 274,
    FSEMU_INPUTDEVICE_BRIGHTNESSDOWN = 275,
    FSEMU_INPUTDEVICE_BRIGHTNESSUP = 276,
    FSEMU_INPUTDEVICE_DISPLAYSWITCH = 277,
    FSEMU_INPUTDEVICE_KBDILLUMTOGGLE = 278,
    FSEMU_INPUTDEVICE_KBDILLUMDOWN = 279,
    FSEMU_INPUTDEVICE_KBDILLUMUP = 280,
    FSEMU_INPUTDEVICE_EJECT = 281,
    FSEMU_INPUTDEVICE_SLEEP = 282,
    FSEMU_INPUTDEVICE_APP1 = 283,
    FSEMU_INPUTDEVICE_APP2 = 284,
    FSEMU_INPUTDEVICE_AUDIOREWIND = 285,
    FSEMU_INPUTDEVICE_AUDIOFASTFORWARD = 286,

    FSEMU_INPUTDEVICE_AFTER_LAST_KEY,

    // Section for scancodes + modifier
    // FSEMU_NUM_SCANCODES_2__ = FSEMU_INPUTDEVICE_NUM_KEYS * 2,
    // Section for scancodes + modifier + shift
    // FSEMU_NUM_SCANCODES_3__ = FSEMU_INPUTDEVICE_NUM_KEYS * 3,

    FSEMU_INPUTDEVICE_CONTROLLER_OFFSET,
    FSEMU_INPUTDEVICE_BEFORE_FIRST_BUTTON =
        FSEMU_INPUTDEVICE_CONTROLLER_OFFSET,
    // Buttons in the same order as SDL2 gamecontroller
    FSEMU_INPUTDEVICE_BUTTON_A,  // FSEMU_INPUTDEVICE_SOUTH,  //
                                 // FSEMU_INPUTDEVICE_A,
    FSEMU_INPUTDEVICE_BUTTON_B,  // FSEMU_INPUTDEVICE_EAST,   //
                                 // FSEMU_INPUTDEVICE_B,
    FSEMU_INPUTDEVICE_BUTTON_X,  // FSEMU_INPUTDEVICE_WEST,   //
                                 // FSEMU_INPUTDEVICE_X,
    FSEMU_INPUTDEVICE_BUTTON_Y,  // FSEMU_INPUTDEVICE_NORTH,  //
                                 // FSEMU_INPUTDEVICE_Y,
    FSEMU_INPUTDEVICE_BACK,
    FSEMU_INPUTDEVICE_GUIDE,
    FSEMU_INPUTDEVICE_START,
    FSEMU_INPUTDEVICE_LEFTSTICK,
    FSEMU_INPUTDEVICE_RIGHTSTICK,
    FSEMU_INPUTDEVICE_LEFTSHOULDER,
    FSEMU_INPUTDEVICE_RIGHTSHOULDER,
    FSEMU_INPUTDEVICE_DPUP,
    FSEMU_INPUTDEVICE_DPDOWN,
    FSEMU_INPUTDEVICE_DPLEFT,
    FSEMU_INPUTDEVICE_DPRIGHT,
    FSEMU_INPUTDEVICE_AFTER_LAST_BUTTON,

    FSEMU_INPUTDEVICE_BEFORE_FIRST_AXIS,
    // Axes in the same order as SDL2 gamecontroller
    FSEMU_INPUTDEVICE_LEFTX,
    FSEMU_INPUTDEVICE_LEFTY,
    FSEMU_INPUTDEVICE_RIGHTX,
    FSEMU_INPUTDEVICE_RIGHTY,
    FSEMU_INPUTDEVICE_LEFTTRIGGER,
    FSEMU_INPUTDEVICE_RIGHTTRIGGER,
    FSEMU_INPUTDEVICE_AFTER_LAST_AXIS,

    FSEMU_INPUTDEVICE_BEFORE_FIRST_HALF_AXIS,
    // Half-axes (no corresponding concept in SDL2 gamecontroller).
    FSEMU_INPUTDEVICE_LEFTXNEG,
    FSEMU_INPUTDEVICE_LEFTXPOS,
    FSEMU_INPUTDEVICE_LEFTYNEG,
    FSEMU_INPUTDEVICE_LEFTYPOS,
    FSEMU_INPUTDEVICE_RIGHTXNEG,
    FSEMU_INPUTDEVICE_RIGHTXPOS,
    FSEMU_INPUTDEVICE_RIGHTYNEG,
    FSEMU_INPUTDEVICE_RIGHTYPOS,
    FSEMU_INPUTDEVICE_AFTER_LAST_HALF_AXIS,

#if 0
    FSEMU_INPUTDEVICE_BUTTON_INVALID,
    FSEMU_INPUTDEVICE_BUTTON_0,
    FSEMU_INPUTDEVICE_BUTTON_1,
    FSEMU_INPUTDEVICE_BUTTON_2,
    FSEMU_INPUTDEVICE_BUTTON_3,
    FSEMU_INPUTDEVICE_BUTTON_4,
    FSEMU_INPUTDEVICE_BUTTON_5,
    FSEMU_INPUTDEVICE_BUTTON_6,
    FSEMU_INPUTDEVICE_BUTTON_7,
    FSEMU_INPUTDEVICE_BUTTON_8,
    FSEMU_INPUTDEVICE_BUTTON_9,
    FSEMU_INPUTDEVICE_BUTTON_10,
    FSEMU_INPUTDEVICE_BUTTON_11,
    FSEMU_INPUTDEVICE_BUTTON_12,
    FSEMU_INPUTDEVICE_BUTTON_13,
    FSEMU_INPUTDEVICE_BUTTON_14,
    FSEMU_INPUTDEVICE_BUTTON_15,
    FSEMU_INPUTDEVICE_BUTTON_16,
    FSEMU_INPUTDEVICE_BUTTON_17,
    FSEMU_INPUTDEVICE_BUTTON_18,
    FSEMU_INPUTDEVICE_BUTTON_19,
    FSEMU_INPUTDEVICE_BUTTON_20,
    FSEMU_INPUTDEVICE_BUTTON_21,
    FSEMU_INPUTDEVICE_BUTTON_22,
    FSEMU_INPUTDEVICE_BUTTON_23,
    FSEMU_INPUTDEVICE_BUTTON_24,
    FSEMU_INPUTDEVICE_BUTTON_25,
    FSEMU_INPUTDEVICE_BUTTON_26,
    FSEMU_INPUTDEVICE_BUTTON_27,
    FSEMU_INPUTDEVICE_BUTTON_28,
    FSEMU_INPUTDEVICE_BUTTON_29,
    FSEMU_INPUTDEVICE_BUTTON_30,
    FSEMU_INPUTDEVICE_BUTTON_31,
    FSEMU_INPUTDEVICE_BUTTON_MAX,
#endif

    FSEMU_INPUTDEVICE_MOUSE_OFFSET,
    // FSEMU_INPUTDEVICE_BEFORE_FIRST_MOUSE BUTTON =
    // FSEMU_INPUTDEVICE_MOUSE_OFFSET
    FSEMU_INPUTDEVICE_LEFTMOUSE,
    FSEMU_INPUTDEVICE_MIDDLEMOUSE,
    FSEMU_INPUTDEVICE_RIGHTMOUSE,
    FSEMU_INPUTDEVICE_MOUSEX,
    FSEMU_INPUTDEVICE_MOUSEXNEG,
    FSEMU_INPUTDEVICE_MOUSEXPOS,
    FSEMU_INPUTDEVICE_MOUSEY,
    FSEMU_INPUTDEVICE_MOUSEYNEG,
    FSEMU_INPUTDEVICE_MOUSEYPOS,

    FSEMU_INPUTDEVICE_MAX,
};

#if 0
// The SCANCODEs _must_ correspond to SDL2's scancodes. Likewise, the order
// of the controller enum entries must also correspond with SDL2.

enum {
    // Section for scancodes

    // Section for scancodes + modifier

    FSEMU_NUM_SCANCODES_2 = FSEMU_NUM_SCANCODES * 2,

    // Section for scancodes + modifier + shift

    FSEMU_NUM_SCANCODES_3 = FSEMU_NUM_SCANCODES * 3,

    // INVALID used as helper to calculate offset
    FSEMU_INPUTDEVICE_CONTROLLER_BUTTON_INVALID,
    FSEMU_INPUTDEVICE_CONTROLLER_BUTTON_A,
    FSEMU_INPUTDEVICE_CONTROLLER_BUTTON_B,
    FSEMU_INPUTDEVICE_CONTROLLER_BUTTON_X,
    FSEMU_INPUTDEVICE_CONTROLLER_BUTTON_Y,
    FSEMU_INPUTDEVICE_CONTROLLER_BUTTON_BACK,
    FSEMU_INPUTDEVICE_CONTROLLER_BUTTON_GUIDE,
    FSEMU_INPUTDEVICE_CONTROLLER_BUTTON_START,
    FSEMU_INPUTDEVICE_CONTROLLER_BUTTON_LEFTSTICK,
    FSEMU_INPUTDEVICE_CONTROLLER_BUTTON_RIGHTSTICK,
    FSEMU_INPUTDEVICE_CONTROLLER_BUTTON_LEFTSHOULDER,
    FSEMU_INPUTDEVICE_CONTROLLER_BUTTON_RIGHTSHOULDER,
    FSEMU_INPUTDEVICE_CONTROLLER_BUTTON_DPAD_UP,
    FSEMU_INPUTDEVICE_CONTROLLER_BUTTON_DPAD_DOWN,
    FSEMU_INPUTDEVICE_CONTROLLER_BUTTON_DPAD_LEFT,
    FSEMU_INPUTDEVICE_CONTROLLER_BUTTON_DPAD_RIGHT,
    FSEMU_INPUTDEVICE_CONTROLLER_BUTTON_MAX,

    // INVALID used as helper to calculate offset
    FSEMU_INPUTDEVICE_CONTROLLER_AXIS_INVALID,
    FSEMU_INPUTDEVICE_CONTROLLER_AXIS_LEFTX,
    FSEMU_INPUTDEVICE_CONTROLLER_AXIS_LEFTY,
    FSEMU_INPUTDEVICE_CONTROLLER_AXIS_RIGHTX,
    FSEMU_INPUTDEVICE_CONTROLLER_AXIS_RIGHTY,
    FSEMU_INPUTDEVICE_CONTROLLER_AXIS_TRIGGERLEFT,
    FSEMU_INPUTDEVICE_CONTROLLER_AXIS_TRIGGERRIGHT,
    FSEMU_INPUTDEVICE_CONTROLLER_AXIS_MAX,

    FSEMU_INPUTDEVICE_JOYSTICK_BUTTON_INVALID,
    FSEMU_INPUTDEVICE_JOYSTICK_BUTTON_0,
    FSEMU_INPUTDEVICE_JOYSTICK_BUTTON_1,
    FSEMU_INPUTDEVICE_JOYSTICK_BUTTON_2,
    FSEMU_INPUTDEVICE_JOYSTICK_BUTTON_3,
    FSEMU_INPUTDEVICE_JOYSTICK_BUTTON_4,
    FSEMU_INPUTDEVICE_JOYSTICK_BUTTON_5,
    FSEMU_INPUTDEVICE_JOYSTICK_BUTTON_6,
    FSEMU_INPUTDEVICE_JOYSTICK_BUTTON_7,
    FSEMU_INPUTDEVICE_JOYSTICK_BUTTON_8,
    FSEMU_INPUTDEVICE_JOYSTICK_BUTTON_9,
    FSEMU_INPUTDEVICE_JOYSTICK_BUTTON_10,
    FSEMU_INPUTDEVICE_JOYSTICK_BUTTON_11,
    FSEMU_INPUTDEVICE_JOYSTICK_BUTTON_12,
    FSEMU_INPUTDEVICE_JOYSTICK_BUTTON_13,
    FSEMU_INPUTDEVICE_JOYSTICK_BUTTON_14,
    FSEMU_INPUTDEVICE_JOYSTICK_BUTTON_15,
    FSEMU_INPUTDEVICE_JOYSTICK_BUTTON_16,
    FSEMU_INPUTDEVICE_JOYSTICK_BUTTON_17,
    FSEMU_INPUTDEVICE_JOYSTICK_BUTTON_18,
    FSEMU_INPUTDEVICE_JOYSTICK_BUTTON_19,
    FSEMU_INPUTDEVICE_JOYSTICK_BUTTON_20,
    FSEMU_INPUTDEVICE_JOYSTICK_BUTTON_21,
    FSEMU_INPUTDEVICE_JOYSTICK_BUTTON_22,
    FSEMU_INPUTDEVICE_JOYSTICK_BUTTON_23,
    FSEMU_INPUTDEVICE_JOYSTICK_BUTTON_24,
    FSEMU_INPUTDEVICE_JOYSTICK_BUTTON_25,
    FSEMU_INPUTDEVICE_JOYSTICK_BUTTON_26,
    FSEMU_INPUTDEVICE_JOYSTICK_BUTTON_27,
    FSEMU_INPUTDEVICE_JOYSTICK_BUTTON_28,
    FSEMU_INPUTDEVICE_JOYSTICK_BUTTON_29,
    FSEMU_INPUTDEVICE_JOYSTICK_BUTTON_30,
    FSEMU_INPUTDEVICE_JOYSTICK_BUTTON_31,
    FSEMU_INPUTDEVICE_JOYSTICK_BUTTON_MAX,
};
#endif

#ifdef FSEMU_INTERNAL

struct fsemu_inputdevice {
    FSEMU_REFABLE;
    int index;
    int port_index;
    int type;
    char *name;
};

#endif  // FSEMU_INTERNAL

#ifdef __cplusplus
}
#endif

#endif  // FSEMU_INPUTDEVICE_H_
